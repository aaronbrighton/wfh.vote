AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    CustomDomainZoneId:
      Type: String
      Default: ''
      Description: 'The Route 53 Zone ID that will be used to create the A record referred to in the "custom_domain" parameter'
    CustomDomain:
      Type: String
      Default: ''
      Description: The domain name for which an A record pointing to the CloudFront distribution will be created in Route53
Conditions:
  CustomDomainSpecified: !Not [ !Equals [ !Ref CustomDomain, '' ] ] # Was a custom domain parameter provided
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket
  S3BucketPolicyOriginAccessIdentity:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'
            Action: s3:GetObject
            Resource: !Sub '${S3Bucket.Arn}/*'
  ACMCertificate:
    Type: AWS::CertificateManager::Certificate
    Condition: CustomDomainSpecified # Only create certificate if CustomDomain provided
    Properties:
      DomainName: !Ref CustomDomain
      SubjectAlternativeNames: 
        - !Sub 'www.${CustomDomain}'
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref CustomDomain
          HostedZoneId: !Ref CustomDomainZoneId
        - DomainName: !Sub 'www.${CustomDomain}'
          HostedZoneId: !Ref CustomDomainZoneId
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases: !If [ CustomDomainSpecified, [ !Ref CustomDomain, !Sub 'www.${CustomDomain}' ], !Ref AWS::NoValue ] # Specify aliases only if a CustomDomain was specified
        HttpVersion: http2 # Maximum HTTP version that you want viewers to use
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'S3-${S3Bucket}'
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # Managed-CachingDisabled
        Origins:
          - DomainName: !GetAtt S3Bucket.RegionalDomainName
            Id: !Sub 'S3-${S3Bucket}'
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        ViewerCertificate: # Specify the certificate generated in ACM only if a CustomDomain was specified
          !If
            - CustomDomainSpecified
            - AcmCertificateArn: !Ref ACMCertificate
              MinimumProtocolVersion: TLSv1.2_2019 # Required when selecting custom certificate
              SslSupportMethod: sni-only # Required when selecting custom certificate
            - CloudFrontDefaultCertificate: true
  Route53BaseRecord:
    Type: AWS::Route53::RecordSet
    Condition: CustomDomainSpecified # Only create certificate if CustomDomain provided
    Properties:
      HostedZoneId: !Ref CustomDomainZoneId
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # Specific ID used for specialized A-Record based alias pointers for CloudFront 
      Name: !Ref CustomDomain
      Type: A
  Route53WWWRecord:
    Type: AWS::Route53::RecordSet
    Condition: CustomDomainSpecified # Only create certificate if CustomDomain provided
    Properties:
      HostedZoneId: !Ref CustomDomainZoneId
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # Specific ID used for specialized A-Record based alias pointers for CloudFront 
      Name: !Sub 'www.${CustomDomain}'
      Type: A
Outputs:
  CloudFrontDistribution: 
    Description: CDN enabled URL to access the static content of the frontend website
    Value: 
      !If
        - CustomDomainSpecified
        - !Ref CustomDomain
        - !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}:CDNWebsiteDomain' # Used to cross-reference across CloudFormation stacks
  S3Bucket:
    Description: Bucket name for where the frontend website source files should live
    Value: !Ref S3Bucket
    Export:
      Name: !Sub '${AWS::StackName}:S3Bucket'